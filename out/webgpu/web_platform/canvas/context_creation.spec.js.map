{"version":3,"sources":["../../../../src/webgpu/web_platform/canvas/context_creation.spec.ts"],"names":["description","Fixture","pbool","makeTestGroup","g","test","desc","cases","fn","t","canvas","params","offscreen","OffscreenCanvas","skip","document","createElement","width","height","ctx","getContext","expect","GPUCanvasContext","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAG,EAApB,CAEP,SAASC,OAAT,QAAwB,sCAAxB;AACA,SAASC,KAAT,QAAsB,6CAAtB;AACA,SAASC,aAAT,QAA8B,yCAA9B;;AAEA,OAAO,MAAMC,CAAC,GAAGD,aAAa,CAACF,OAAD,CAAvB;;AAEPG,CAAC,CAACC,IAAF,CAAO,aAAP;AACGC,IADH;AAEK;AACL;AACA,4DAJA;;AAMGC,KANH,CAMSL,KAAK,CAAC,WAAD,CANd;AAOGM,EAPH,CAOM,MAAMC,CAAN,IAAW;AACb,MAAIC,MAAJ;AACA,MAAID,CAAC,CAACE,MAAF,CAASC,SAAb,EAAwB;AACtB,QAAI,OAAOC,eAAP,KAA2B,WAA/B,EAA4C;AAC1C;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,kDAAP;AACD;;AAEDJ,IAAAA,MAAM,GAAG,IAAIG,eAAJ,CAAoB,EAApB,EAAwB,EAAxB,CAAT;AACD,GAPD,MAOO;AACL,QAAI,OAAOE,QAAP,KAAoB,WAAxB,EAAqC;AACnC;AACAN,MAAAA,CAAC,CAACK,IAAF,CAAO,+CAAP;AACD;;AAEDJ,IAAAA,MAAM,GAAGK,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAT;AACAN,IAAAA,MAAM,CAACO,KAAP,GAAe,EAAf;AACAP,IAAAA,MAAM,CAACQ,MAAP,GAAgB,EAAhB;AACD;;AAED,QAAMC,GAAG,GAAGT,MAAM,CAACU,UAAP,CAAkB,YAAlB,CAAZ;AACAX,EAAAA,CAAC,CAACY,MAAF,CAASF,GAAG,YAAYG,gBAAxB;AACD,CA7BH;;AA+BAlB,CAAC,CAACC,IAAF,CAAO,gBAAP,EAAyBC,IAAzB,CAA8B,kDAA9B,EAAkFiB,aAAlF","sourcesContent":["export const description = '';\n\nimport { Fixture } from '../../../common/framework/fixture.js';\nimport { pbool } from '../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\n\nexport const g = makeTestGroup(Fixture);\n\ng.test('return_type')\n  .desc(\n    `Test the return type of getContext for WebGPU.\n\nTODO: Test all combinations of context creation attributes.`\n  )\n  .cases(pbool('offscreen'))\n  .fn(async t => {\n    let canvas: HTMLCanvasElement | OffscreenCanvas;\n    if (t.params.offscreen) {\n      if (typeof OffscreenCanvas === 'undefined') {\n        // Skip if the current context doesn't have OffscreenCanvas (e.g. Node).\n        t.skip('OffscreenCanvas is not available in this context');\n      }\n\n      canvas = new OffscreenCanvas(10, 10);\n    } else {\n      if (typeof document === 'undefined') {\n        // Skip if there is no document (Workers, Node)\n        t.skip('DOM is not available to create canvas element');\n      }\n\n      canvas = document.createElement('canvas');\n      canvas.width = 10;\n      canvas.height = 10;\n    }\n\n    const ctx = canvas.getContext('gpupresent');\n    t.expect(ctx instanceof GPUCanvasContext);\n  });\n\ng.test('attributes_idl').desc('Tests invalid context creation attribute values.').unimplemented();\n"],"file":"context_creation.spec.js"}